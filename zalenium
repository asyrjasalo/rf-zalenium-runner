#!/usr/bin/env bash

# https://github.com/asyrjasalo/rf-zalenium-runner

set -e

### globals ####################################################################

this_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

### settings ###################################################################

: ${SELENIUM_IMAGE_LABEL:="elgalu/selenium"}
: ${SELENIUM_IMAGE_TAG:="3.11.0-p0"}
: ${ZALENIUM_CONTAINER_NAME:="zalenium"}
: ${ZALENIUM_IMAGE_LABEL:="dosel/zalenium"}
: ${ZALENIUM_IMAGE_TAG:="3.10.0c"}
: ${ZALENIUM_NETWORK:="zalenium_default"}
: ${SELENIUM_GRID_PORT:=4444}

### helpers ####################################################################

_portable_timeout() {
  perl -e 'alarm shift; exec @ARGV' "$@";
}

_wait_zalenium_ready() {
  local done_msg="Zalenium is now ready!"
  while ! docker logs "$ZALENIUM_CONTAINER_NAME" | grep "$done_msg"; do
    echo -n '.'
    sleep 0.2
  done
}
export ZALENIUM_CONTAINER_NAME
export -f _wait_zalenium_ready

### actions ####################################################################

down() {
  docker rm --force "$ZALENIUM_CONTAINER_NAME" 1>/dev/null
}

up() {
  if ! docker top "$ZALENIUM_CONTAINER_NAME" &>/dev/null ; then
    echo "### Pulling Docker image for Selenium"
    docker pull "$SELENIUM_IMAGE_LABEL:$SELENIUM_IMAGE_TAG"
    docker network create --driver bridge $ZALENIUM_NETWORK 2>/dev/null || true

    if [ "$(uname -s)" != 'Darwin' ]; then
      echo "### Setting non-Darwin specific flags"
      os_flags="-v $(which docker):/usr/bin/docker"
      os_flags="$os_flags -e HOST_GID=$(id -u)"
      os_flags="$os_flags -e HOST_UID=$(id -g)"
    fi

    echo "### Starting Zalenium in background"
    local sauceLabs=$([ -n "$SAUCE_USERNAME" ] && echo 'true' || echo 'false')
    local browserStack=$([ -n "$BROWSER_STACK_USER" ] && echo 'true' || echo 'false')
    local testingBot=$([ -n "$TESTINGBOT_KEY" ] && echo 'true' || echo 'false')
    docker run -d -t --name "$ZALENIUM_CONTAINER_NAME" -p $SELENIUM_GRID_PORT:4444 \
      $os_flags \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -v "$this_path/videos":/home/seluser/videos \
      -e SAUCE_USERNAME="$SAUCE_USERNAME" \
      -e SAUCE_ACCESS_KEY="$SAUCE_ACCESS_KEY" \
      -e BROWSER_STACK_USER="$BROWSER_STACK_USER" \
      -e BROWSER_STACK_KEY="$BROWSER_STACK_KEY" \
      -e TESTINGBOT_KEY="$TESTINGBOT_KEY" \
      -e TESTINGBOT_SECRET="$TESTINGBOT_SECRET" \
      --network="$ZALENIUM_NETWORK" \
      "$ZALENIUM_IMAGE_LABEL:$ZALENIUM_IMAGE_TAG" start \
        --desiredContainers 0 \
        --maxDockerSeleniumContainers 4 \
        --screenWidth 1366 --screenHeight 768 \
        --timeZone "Europe/Helsinki" \
        --videoRecordingEnabled true \
        --sauceLabsEnabled $sauceLabs \
        --browserStackEnabled $browserStack \
        --testingBotEnabled $testingBot \
        --startTunnel false \
        --sendAnonymousUsageInfo false

    trap "down ; exit 1" SIGINT SIGTERM

    echo "### Waiting Zalenium to be started in background"
    if ! _portable_timeout 60 bash -c _wait_zalenium_ready 2>/dev/null; then
      echo "Error: Zalenium starting timeouted, exiting."
      exit 124  # same as GNU coreutils `timeout` exit status
    fi

    echo "... ready for the tests"
  fi
}

### main #######################################################################

action="$1"
[ -z "$action" ] && action="up"

case "$action" in
  up|start)
    up
    echo "### Zalenium running - to stop and remove it: $0 down"
    ;;
  reload|restart)
    down || true
    up
    ;;
  down|destroy)
    down
    echo "### Done - the recorded videos were not removed."
    ;;
  exec)
    up
    shift
    eval "$@"
    ;;
  logs)
    docker logs "$ZALENIUM_CONTAINER_NAME" --follow
    ;;
  *)
    echo "Usage: $0 (up|reload|down|logs)|(exec <command>)"
    exit 64
esac
